[project]
name = "plc-sniffer"
version = "0.3.3"
description = "A PLC network sniffer that captures and forwards UDP packets"
readme = "README.md"
requires-python = ">=3.13"
license = {text = "MIT"}
authors = [{name = "Oriol Rius", email = "oriol@joor.net"}]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.13",
    "Topic :: System :: Networking :: Monitoring",
]
dependencies = [
    "scapy>=2.5.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.20.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pylint>=2.16.0",
    "pre-commit>=3.0.0",
    "tox>=4.0.0",
]

[project.scripts]
plc-sniffer = "plc_sniffer.__main__:main"

[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[tool.uv]
# UV-specific options can go here

[tool.mypy]
python_version = "3.13"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "scapy.*"
ignore_missing_imports = true
